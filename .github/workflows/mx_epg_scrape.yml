name: MX-EPG-SCRAPE

on:
  workflow_dispatch: {}
  schedule:
    - cron: "3 */6 * * *"  # every 6 hours at :03

concurrency:
  group: mx-epg-scrape
  cancel-in-progress: false

jobs:
  scrape:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: "Install dependencies (Option A: explicit Playwright)"
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install playwright
          python -m playwright install --with-deps chromium

      # --- your existing MX scrape (UNCHANGED) ---
      - name: Run scraper
        env:
          PYTHONUNBUFFERED: "1"
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

          # Scraper behavior
          LOCAL_TZ: "America/Mexico_City"
          HOURS_AHEAD: "36"
          SCRAPE_CONCURRENCY: "4"

          # Replace stale rows only after a successful parse (script handles purge-after-success)
          PURGE_HOURS_BACK: "24"

          # OnTVTonight timezone alignment:
          # - "shift": keep clock time from the guide but reinterpret in LOCAL_TZ
          # - "convert": normal tz conversion (preserve instant)
          ONTV_ALIGN_MODE: "shift"

          # Optional for a single run (uncomment to use):
          # DEBUG_ONTV: "1"
          # DRY_RUN_PURGE: "1"   # parse without deleting existing rows
        run: |
          set -euo pipefail
          mkdir -p logs
          python -m scripts.scrape_mx_epg 2>&1 | tee "logs/scrape_${{ github.run_id }}.log"

      # --- new PR TvTV scraper (ADDED) ---
      - name: Run PR TVTV scraper
        env:
          PYTHONUNBUFFERED: "1"
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

          # Scraper behavior
          LOCAL_TZ: "America/Puerto_Rico"
          HOURS_AHEAD: "36"
          SCRAPE_CONCURRENCY: "4"   # (unused by this script but fine to keep)

          # TvTV targeting (envs are optional — you can pass flags instead)
          CITY_SLUG: "bayamon"
          LINEUP_ID: "luUSA-PR68592-X"
          STATION_IDS: "43726"
          # PROGRAM_REGEX: 'PR\\s*en\\s*Vivo'  # optional filter
        run: |
          set -euo pipefail
          mkdir -p logs out
          python -m scripts.parsers.scrape_pr_tvtv \
            --output "out/pr_tvtv_${{ github.run_id }}.jsonl" \
            2>&1 | tee "logs/pr_tvtv_${{ github.run_id }}.log"

      # Upload logs (always)
      - name: Upload logs (always)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: mx-epg-scrape-logs
          path: logs/*.log

      # Optional: upload PR TvTV output (won’t error if missing)
      - name: Upload PR TvTV EPG (optional)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: pr-tvtv-epg-${{ github.run_id }}
          path: out/pr_tvtv_*.jsonl
          if-no-files-found: ignore
