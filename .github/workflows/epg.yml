name: EPG Build (npm run grab)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *" # daily, 6:00 UTC

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      NODE_OPTIONS: --max-old-space-size=2048
      # Sites that are known to 403 on GitHub runners. You can relax this later.
      BLOCKED_SITES: directv.com,mi.tv,tvtv.us,tvpassport.com,gatotv.com

    steps:
      - uses: actions/checkout@v4

      - name: Checkout iptv-org/epg (src)
        run: git clone --depth=1 https://github.com/iptv-org/epg.git epg-src

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps for epg (official repo)
        working-directory: epg-src
        run: npm ci

      - name: Prepare scripts dir
        run: mkdir -p scripts work out

      - name: Add make-channels script
        run: |
          cat > scripts/make-channels-by-site.mjs <<'EOF'
          # (PASTE THE WHOLE JS FROM SECTION 1 HERE)
          EOF

      - name: Build per-country, per-site (US, PR, MX, CA, IT, ES, UK/GB, AU, IE, DE, DO)
        env:
          COUNTRIES: US,PR,MX,CA,IT,ES,UK,AU,IE,DE,DO
        run: |
          IFS=',' read -ra CCS <<< "$COUNTRIES"
          for CC in "${CCS[@]}"; do
            echo "== Prepare channels for $CC =="
            node scripts/make-channels-by-site.mjs "$CC"

            mkdir -p "out/$CC"
            shopt -s nullglob
            for f in work/${CC}/channels-${CC}-*.xml; do
              site=$(basename "$f" .xml | sed -E "s/^channels-${CC}-//")
              echo "::group::Grab $CC / $site"
              echo "channels: $f"
              ( cd epg-src && \
                npm run grab -- \
                  --site="$site" \
                  --channels="../$f" \
                  --output="../out/${CC}/${site}.xml" \
                  --days 1 \
                  --maxConnections 2 \
                  --concurrency 2 \
                  --timeout 180000 \
                  --delay 500 \
                  --gzip \
                  --debug || true )
              echo "::endgroup::"
            done

            # keep artifact step happy even if nothing built
            if [ -z "$(ls -A out/${CC} 2>/dev/null)" ]; then
              echo "no site outputs for ${CC}" > "out/${CC}/README.txt"
            fi

            echo "== List $CC outputs ==" && ls -lah "out/${CC}" || true
          done

      - name: Upload artifacts (all countries)
        uses: actions/upload-artifact@v4
        with:
          name: epg-sites-all
          path: out/**
          if-no-files-found: warn
