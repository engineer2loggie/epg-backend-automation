name: EPG-MX

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 7 * * *' # daily 07:00 UTC

concurrency:
  group: epg-mx
  cancel-in-progress: true

jobs:
  mx:
    runs-on: ubuntu-latest
    timeout-minutes: 300

    env:
      # Scraper config
      MX_SEARCH_URL: https://iptv-org.github.io/?q=live%20country:MX
      MX_EPG_URLS: "https://epgshare01.online/epgshare01/epg_ripper_US1.xml.gz https://epgshare01.online/epgshare01/epg_ripper_US_LOCALS2.xml.gz https://epgshare01.online/epgshare01/epg_ripper_MX1.xml.gz"
      HEADLESS: 'true'
      MAX_CHANNELS: '0'
      PER_PAGE_DELAY_MS: '150'
      NAV_TIMEOUT_MS: '30000'
      PROBE_TIMEOUT_MS: '5000'
      FUZZY_MIN: '0.45'
      LOG_UNMATCHED: '1'

      # Supabase (public.mx_channels)
      SUPABASE_SCHEMA: public
      SUPABASE_TABLE: mx_channels
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}

      # Optional VPN (OpenVPN to NordVPN). Set NORD_ENABLE='1' to enable.
      NORD_ENABLE: '0'
      NORD_COUNTRY_PREFIX: mx
      NORD_PROTOCOL: udp
      NORD_USERNAME: ${{ secrets.NORD_USERNAME }}
      NORD_PASSWORD: ${{ secrets.NORD_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install runtime deps
        run: |
          set -euxo pipefail
          npm i --no-save playwright @supabase/supabase-js saxes
          npx playwright install --with-deps chromium

      - name: Connect NordVPN (OpenVPN) [optional]
        if: env.NORD_ENABLE == '1'
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y openvpn unzip curl
          # Try legacy first, then new path
          BASE=""
          for b in ovpn_legacy ovpn; do
            URL="https://downloads.nordcdn.com/configs/files/${b}/servers/ovpn.zip"
            if curl -fsI "$URL" >/dev/null; then
              BASE="$b"
              curl -fsSLO "$URL"
              break
            fi
          done
          if [ -z "$BASE" ]; then
            echo "Could not find NordVPN ovpn.zip (legacy or new path)"; exit 1
          fi

          rm -rf ovpn
          mkdir -p ovpn
          unzip -q ovpn.zip -d ovpn

          # Pick a Mexico server config: mx*.udp.ovpn (or tcp if you change NORD_PROTOCOL)
          PATTERN="${NORD_COUNTRY_PREFIX:-mx}*.${NORD_PROTOCOL:-udp}.ovpn"
          CONF="$(find ovpn -type f -name "$PATTERN" | head -n 1 || true)"
          if [ -z "$CONF" ]; then
            echo "No config found for pattern: $PATTERN"; ls -R ovpn; exit 1
          fi
          echo "Using OpenVPN config: $CONF"

          printf "%s\n%s\n" "${NORD_USERNAME}" "${NORD_PASSWORD}" > cred.txt
          chmod 600 cred.txt

          sudo openvpn --config "$CONF" --auth-user-pass cred.txt --daemon --log /tmp/openvpn.log
          # Wait up to 90s until the tunnel is established
          timeout 90 bash -c 'until grep -q "Initialization Sequence Completed" /tmp/openvpn.log; do sleep 1; done'
          echo "Exit IP: $(curl -s https://ifconfig.co)"
          echo "Exit country: $(curl -s https://ifconfig.co/country)"

      - name: Run MX scrape & match
        run: node scripts/mx-scrape-and-match.mjs

      - name: Disconnect VPN
        if: always() && env.NORD_ENABLE == '1'
        run: sudo killall openvpn || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mx-output
          path: |
            out/mx/records.json
            out/mx/matches.json
            out/mx/unmatched.json
          if-no-files-found: warn
