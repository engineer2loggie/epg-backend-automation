name: EPG-MX

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 7 * * *' # daily 07:00 UTC

concurrency:
  group: epg-mx
  cancel-in-progress: true

jobs:
  mx:
    runs-on: ubuntu-latest
    timeout-minutes: 300

    env:
      MX_SEARCH_URL: https://iptv-org.github.io/?q=live%20country:MX
      MX_EPG_URLS: >-
        https://epgshare01.online/epgshare01/epg_ripper_US1.xml.gz
        https://epgshare01.online/epgshare01/epg_ripper_US_LOCALS2.xml.gz
        https://epgshare01.online/epgshare01/epg_ripper_MX1.xml.gz
      M3U_URL: ${{ secrets.M3U_URL }}
      HEADLESS: 'true'
      MAX_CHANNELS: '0'
      PER_PAGE_DELAY_MS: '150'
      NAV_TIMEOUT_MS: '30000'
      PROBE_TIMEOUT_MS: '5000'
      FUZZY_MIN: '0.45'
      LOG_UNMATCHED: '1'
      INGEST_PROGRAMS: '1'
      PROGRAMS_HOURS_AHEAD: '36'
      SUPABASE_SCHEMA: public
      SUPABASE_TABLE: mx_channels
      PROGRAMS_TABLE: epg_programs
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      NORDVPN_TOKEN: ${{ secrets.NORDVPN_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        shell: bash
        run: |
          set -euo pipefail
          npm install
          npx playwright install --with-deps chromium

      - name: Install NordVPN CLI
        if: ${{ env.NORDVPN_TOKEN != '' }}
        shell: bash
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y curl gnupg
          curl -sSf https://repo.nordvpn.com/gpg/nordvpn_public.asc \
            | sudo gpg --dearmor -o /usr/share/keyrings/nordvpn-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/nordvpn-archive-keyring.gpg] https://repo.nordvpn.com/deb/nordvpn/debian stable main" \
            | sudo tee /etc/apt/sources.list.d/nordvpn.list
          sudo apt-get update
          sudo apt-get install -y nordvpn
          sudo systemctl enable --now nordvpnd || true

      # FIX: Replaced expect script and complex loop with a more robust background process handler
      - name: Connect VPN and Run Scraper
        if: ${{ env.NORDVPN_TOKEN != '' }}
        shell: bash
        env:
          NORDVPN_TOKEN: ${{ env.NORDVPN_TOKEN }}
        run: |
          set -euo pipefail
          sudo nordvpn login --token "$NORDVPN_TOKEN" --no-tty
          sudo nordvpn set analytics off --no-tty
          sudo nordvpn set technology nordlynx --no-tty
          
          echo "--- Starting NordVPN connection in the background ---"
          sudo nordvpn connect Mexico --no-tty &
          
          echo "--- Waiting for connection to establish ---"
          WAIT_SECONDS=90
          ELAPSED=0
          while ! sudo nordvpn status --no-tty | grep -qi "Status: Connected"; do
            if [ $ELAPSED -ge $WAIT_SECONDS ]; then
              echo "Failed to connect to NordVPN within $WAIT_SECONDS seconds."
              sudo nordvpn status --no-tty
              exit 1
            fi
            sleep 5
            ELAPSED=$((ELAPSED + 5))
            echo "Still connecting... (${ELAPSED}s / ${WAIT_SECONDS}s)"
          done
          
          echo "NordVPN connection successful and verified."
          sudo nordvpn status --no-tty

          echo "--- Running scrape & match script inside VPN tunnel ---"
          npm start

      - name: Run MX scrape & match (No VPN)
        if: ${{ env.NORDVPN_TOKEN == '' }}
        shell: bash
        run: |
          set -euo pipefail
          npm start

      - name: NordVPN disconnect
        if: always() && env.NORDVPN_TOKEN != ''
        shell: bash
        run: |
          set -euo pipefail
          echo "Disconnecting from NordVPN..."
          sudo nordvpn disconnect --no-tty || true
          sudo nordvpn status --no-tty || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mx-output
          path: |
            out/mx/records.json
            out/mx/matches.json
            out/mx/unmatched.json
            out/mx/epg_programs_sample.json
          if-no-files-found: warn
