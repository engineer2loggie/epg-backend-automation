name: EPG-MX

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 7 * * *' # daily 07:00 UTC

concurrency:
  group: epg-mx
  cancel-in-progress: true

jobs:
  mx:
    runs-on: ubuntu-latest
    timeout-minutes: 300

    env:
      MX_SEARCH_URL: https://iptv-org.github.io/?q=live%20country:MX
      MX_EPG_URLS: >-
        https://epgshare01.online/epgshare01/epg_ripper_US1.xml.gz
        https://epgshare01.online/epgshare01/epg_ripper_US_LOCALS2.xml.gz
        https://epgshare01.online/epgshare01/epg_ripper_MX1.xml.gz
      M3U_URL: ${{ secrets.M3U_URL }}
      HEADLESS: 'true'
      MAX_CHANNELS: '0'
      PER_PAGE_DELAY_MS: '150'
      NAV_TIMEOUT_MS: '30000'
      PROBE_TIMEOUT_MS: '5000'
      FUZZY_MIN: '0.45'
      LOG_UNMATCHED: '1'
      INGEST_PROGRAMS: '1'
      PROGRAMS_HOURS_AHEAD: '36'
      SUPABASE_SCHEMA: public
      SUPABASE_TABLE: mx_channels
      PROGRAMS_TABLE: epg_programs
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
      NORDVPN_TOKEN: ${{ secrets.NORDVPN_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        shell: bash
        run: |
          set -euo pipefail
          npm install
          npx playwright install --with-deps chromium

      - name: Install NordVPN CLI
        if: ${{ env.NORDVPN_TOKEN != '' }}
        shell: bash
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y curl gnupg expect
          curl -sSf https://repo.nordvpn.com/gpg/nordvpn_public.asc \
            | sudo gpg --dearmor -o /usr/share/keyrings/nordvpn-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/nordvpn-archive-keyring.gpg] https://repo.nordvpn.com/deb/nordvpn/debian stable main" \
            | sudo tee /etc/apt/sources.list.d/nordvpn.list
          sudo apt-get update
          sudo apt-get install -y nordvpn
          sudo systemctl enable --now nordvpnd || true

      - name: Make non-interactive nordvpn wrapper
        if: ${{ env.NORDVPN_TOKEN != '' }}
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p scripts
          cat > scripts/nordvpn.exp <<'EXP'
          #!/usr/bin/expect -f
          set timeout 120
          if {$argc < 1} { exit 2 }
          spawn sudo nordvpn {*}$argv
          expect {
            -re "(?i)You are connected"      { exp_continue }
            -re "(?i)Do you allow.*\\(y/n\\)" { send -- "no\r"; exp_continue }
            -re "(?i)answer with yes/no"     { send -- "no\r"; exp_continue }
            timeout                          { exit 1 } 
            eof
          }
          exit 0
          EXP
          chmod +x scripts/nordvpn.exp

      # FIX: Using a more aggressive timeout to prevent the connection step from hanging
      - name: Connect VPN and Run Scraper
        if: ${{ env.NORDVPN_TOKEN != '' }}
        shell: bash
        env:
          NORDVPN_TOKEN: ${{ env.NORDVPN_TOKEN }}
        run: |
          set -euo pipefail
          scripts/nordvpn.exp login --token "$NORDVPN_TOKEN"
          scripts/nordvpn.exp set analytics disabled
          scripts/nordvpn.exp set technology nordlynx
          
          MAX_ATTEMPTS=3
          CONNECTED=false
          for i in $(seq 1 $MAX_ATTEMPTS); do
            echo "--- Attempt $i of $MAX_ATTEMPTS to connect to NordVPN ---"
            CONNECT_ARGS="connect Mexico"
            if [ "$i" -gt 1 ]; then
              CONNECT_ARGS="connect --group P2P Mexico"
            fi
            
            # Use timeout with a kill-after signal to ensure the process terminates if it hangs.
            # It will wait 90s, then send a TERM signal. If still running after 15s, it sends a KILL signal.
            timeout -k 15s 90s scripts/nordvpn.exp $CONNECT_ARGS || true
            
            if scripts/nordvpn.exp status | grep -qi "Status: Connected"; then
              echo "NordVPN connection successful and verified."
              CONNECTED=true
              break
            else
              echo "Attempt $i failed. Retrying in 10 seconds..."
              scripts/nordvpn.exp disconnect || true
              sleep 10
            fi
          done

          if [ "$CONNECTED" = "false" ]; then
            echo "All attempts to connect to NordVPN failed."
            scripts/nordvpn.exp status
            exit 1
          fi

          echo "--- Running scrape & match script inside VPN tunnel ---"
          npm start

      - name: Run MX scrape & match (No VPN)
        if: ${{ env.NORDVPN_TOKEN == '' }}
        shell: bash
        run: |
          set -euo pipefail
          npm start

      - name: NordVPN disconnect
        if: always() && env.NORDVPN_TOKEN != ''
        shell: bash
        run: |
          set -euo pipefail
          echo "Disconnecting from NordVPN..."
          scripts/nordvpn.exp disconnect || true
          scripts/nordvpn.exp status || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mx-output
          path: |
            out/mx/records.json
            out/mx/matches.json
            out/mx/unmatched.json
            out/mx/epg_programs_sample.json
          if-no-files-found: warn
